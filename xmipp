#!/usr/bin/env python3
# ***************************************************************************
# * Authors:		Alberto García (alberto.garcia@cnb.csic.es)
# *							Martín Salinas (martin.salinas@cnb.csic.es)
# *
# *
# * This program is free software; you can redistribute it and/or modify
# * it under the terms of the GNU General Public License as published by
# * the Free Software Foundation; either version 2 of the License, or
# * (at your option) any later version.
# *
# * This program is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# * GNU General Public License for more details.
# *
# * You should have received a copy of the GNU General Public License
# * along with this program; if not, write to the Free Software
# * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
# * 02111-1307 USA
# *
# * All comments concerning this program package may be sent to the
# * e-mail address 'scipion@cnb.csic.es'
# ***************************************************************************/

# General imports
import argparse

# Installer imports
from installer.constants import DEFAULT_JOBS, MODES, MODE_ALL, MODE_CONFIG

def modeConfig(args: argparse.Namespace):
	""" This function cheks the params for execution mode "config" and then runs it. """
	# TODO: Implement

def modeCompileAndInstall(args: argparse.Namespace):
	""" This function cheks the params for execution mode "compileAndInstall" and then runs it. """
	# TODO: Implement

def modeAll(args: argparse.Namespace):
	""" This function checks the params for execution mode "all" and then runs it. """
	# Running config
	modeConfig(args)

	# Running compilation and installation
	modeCompileAndInstall(args)

def runSelectedMode(args: argparse.Namespace):
	""" This function runs the selected execution mode """
	if args.mode == MODE_ALL:
		modeAll(args)
	elif args.mode == MODE_CONFIG:
		modeConfig(args)

if __name__ == "__main__":
	""" Calls main function when executed. """
	# Parse the command-line arguments
	epilog = "Example 1: ./xmipp"
	epilog += "\nExample 2: ./xmipp compileAndInstall -j 4"
	parser = argparse.ArgumentParser(
		description="Run xmipp's installer script",
		epilog=epilog,
		formatter_class=argparse.RawDescriptionHelpFormatter
	)

	# Adding params
	# Main param is execution mode. Gets options from a dictionary in constants
	parser.add_argument("mode", type=str, choices=list(MODES.keys()), nargs='?', default="all", help="Execution mode.")
	parser.add_argument("-j", "--jobs", type=int, help=f"Number of jobs. Defaults to {DEFAULT_JOBS}. Example: -j 4.")
	args = parser.parse_args()

	# Set the number of jobs
	args.jobs = args.jobs if args.jobs else DEFAULT_JOBS

	print("ARGS:", args)

	# Running installer in selected mode
	runSelectedMode(args)
